introduction
schedule
reproducible-analytical-pipelines
data-products
machine-learning
why-r-why-not-insert-your-favourite-programming-language
pre-requisites
introduction-to-r
reading-in-data-with-r
a-little-aside-on-pipes
exploring-and-cleaning-data-with-r
data-visualization
a-primer-on-functional-programming
introduction-1
defining-your-own-functions
functional-programming
git
introduction-2
installing-git
setting-up-a-repo
cloning-the-repository-onto-your-computer
your-first-commit
collaborating
contributing-to-someone-elses-repository
package-development
introduction-3
getting-started
adding-functions
functions-dependencies
documentation
documenting-functions
documenting-the-package
the-namespace-file
the-description-file
vignettes
packages-website
installing-your-package
unit-tests
introduction-4
testing-your-package
is-the-function-returning-an-expected-value-for-a-given-input
can-the-function-deal-with-all-kinds-of-input
back-to-developing-again
and-back-to-testing
setting-up-pipelines-with-targets
introduction-5
build-automation-with-r
making-this-pipeline-almost-reproducible
one-projet-one-library
data-products-1
static-documents
word-pdf-and-pptx-documents
html-documents
using-your-package-in-a-targets-pipeline
what-else-should-you-learn
a-first-step-towards-reproducible-projects
an-aside-on-renv
our-actual-first-pipeline
running-someone-elses-pipeline
why-we-need-more
